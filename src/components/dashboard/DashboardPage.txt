// src/components/Dashboard/DashboardPage.jsx
import React, { useEffect, useState } from "react";
import DashboardCard from "./DashboardCard";
import { getDashboardData } from "../../services/api";

const DashboardPage = () => {
  const [data, setData] = useState(null);
  const [filters, setFilters] = useState({
    base: "",
    equipmentType: "",
    from: "",
    to: "",
  });
  const [loading, setLoading] = useState(false);

  const token = localStorage.getItem("token");

  const fetchData = async () => {
    try {
      setLoading(true);
      const result = await getDashboardData(token, filters);
      setData(result);
    } catch (err) {
      console.error("Error fetching dashboard:", err);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchData();
  }, []);

  const handleChange = (e) => {
    setFilters({ ...filters, [e.target.name]: e.target.value });
  };

  const handleFilter = () => {
    fetchData();
  };

  return (
    <div className="p-6 bg-gray-100 min-h-screen">
      <h1 className="text-2xl font-bold mb-6 text-blue-800">
        Military Asset Dashboard
      </h1>

      {/* Filters */}
      <div className="flex flex-wrap gap-4 mb-6 bg-white p-4 rounded-lg shadow">
        <input
          type="text"
          name="base"
          placeholder="Base Name"
          value={filters.base}
          onChange={handleChange}
          className="border px-3 py-2 rounded-lg"
        />
        <input
          type="text"
          name="equipmentType"
          placeholder="Equipment Type"
          value={filters.equipmentType}
          onChange={handleChange}
          className="border px-3 py-2 rounded-lg"
        />
        <input
          type="date"
          name="from"
          value={filters.from}
          onChange={handleChange}
          className="border px-3 py-2 rounded-lg"
        />
        <input
          type="date"
          name="to"
          value={filters.to}
          onChange={handleChange}
          className="border px-3 py-2 rounded-lg"
        />
        <button
          onClick={handleFilter}
          className="bg-blue-600 text-white px-5 py-2 rounded-lg hover:bg-blue-700"
        >
          Apply Filters
        </button>
      </div>

      {/* Dashboard Data */}
      {loading ? (
        <p>Loading...</p>
      ) : data ? (
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
          <DashboardCard title="Opening Balance" value={data.openingBalance} />
          <DashboardCard title="Purchases" value={data.purchases} />
          <DashboardCard title="Transfers In" value={data.transfersIn} />
          <DashboardCard title="Transfers Out" value={data.transfersOut} />
          <DashboardCard title="Net Movement" value={data.netMovement} />
          <DashboardCard title="Assigned" value={data.assigned} />
          <DashboardCard title="Expended" value={data.expended} />
          <DashboardCard title="Closing Balance" value={data.closingBalance} />
        </div>
      ) : (
        <p>No data available.</p>
      )}
    </div>
  );
};

export default DashboardPage;
